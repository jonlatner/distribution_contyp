
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Top commands ----
> 
> # https://stackoverflow.com/questions/7505547/detach-all-packages-while-working-in-r
> detachAllPackages <- function() {
+         basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
+         package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
+         package.list <- setdiff(package.list,basic.packages)
+         if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
+         
+ }
> detachAllPackages()
> rm(list=ls(all=TRUE))
> 
> # FOLDERS
> setwd("/Users/jonathanlatner/OneDrive/")
> # setwd("C:/Users/ba1ks6/Google Drive/")
> 
> # orig_data_files = "/Volumes/seccopa.empsoz/Data/EU-LFS/"
> orig_data_files = "SECCOPA/data/EU_LFS/YearlyFiles_83_2019/"
> project_data_files = "SECCOPA/projects/distribution_contyp/data_files/eu_lfs/"
> 
> # LIBRARY
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.2     ✔ purrr   0.3.4
✔ tibble  3.0.6     ✔ dplyr   1.0.4
✔ tidyr   1.1.2     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> library(data.table)

Attaching package: ‘data.table’

The following objects are masked from ‘package:dplyr’:

    between, first, last

The following object is masked from ‘package:purrr’:

    transpose

> library(beepr)
> library(countrycode)
> 
> # Variables data ----
> 
> # Demographic data
> # AGE - Age of interviewed person
> # SEX - Sex
> # MARSTAT - Marital status
> # COUNTRYB - Country of birth
> # ILOSTAT - Labour status during the reference week
> # FTPT - Full-time / Part-time distinction
> # HATLEVEL - Highest educational attainment level
> # INCDECIL - Monthly (take home) pay from main job (deciles) *
> # COEFFY - Yearly weighting factor (also called COEFF in yearly files)
> # TEMP - Permanency of the job
> 
> # Load data ----
> 
> df_country <- data.frame() # create empty data frame
> 
> folders <- list.files(path = orig_data_files, pattern="_YEAR_1983_", full.names=FALSE) # scan all files in a folder
> for(x in seq_along(folders)) {
+         df_country_pre_1998 <- data.frame() # create empty data frame
+         print(paste0(orig_data_files,folders[x])) 
+         files <- list.files(path = paste0(orig_data_files,folders[x]), pattern=".csv", full.names=FALSE) # scan all files in a folder
+         for(y in seq_along(files)) {
+                 print(paste0(orig_data_files,folders[x],"/",files[y]))
+                 df <- read.csv(file = paste0(orig_data_files,folders[x],"/",files[y]))
+                 df <- select(df, COUNTRY, YEAR, TEMP, AGE, SEX, MARSTAT, COUNTRYB, ILOSTAT, FTPT, HATLEV1D, COEFF)
+                 c <- df$COUNTRY[1]
+                 df_country_pre_1998 <- rbind(df_country_pre_1998,df)
+                 df_country_pre_1998 <- df_country_pre_1998
+         }
+         df_country <- rbind(df_country,df_country_pre_1998)
+ }
> rm(df_country_pre_1998)
Warning message:
In rm(df_country_pre_1998) : object 'df_country_pre_1998' not found
> 
> folders <- list.files(path = orig_data_files, pattern="_YEAR_1998_", full.names=FALSE) # scan all files in a folder
> for(x in seq_along(folders)) {
+         df_country_pst_1998 <- data.frame() # create empty data frame
+         print(paste0(orig_data_files,folders[x])) 
+         files <- list.files(path = paste0(orig_data_files,folders[x]), pattern=".csv", full.names=FALSE) # scan all files in a folder
+         for(y in seq_along(files)) {
+                 print(paste0(orig_data_files,folders[x],"/",files[y]))
+                 df <- read.csv(file = paste0(orig_data_files,folders[x],"/",files[y]))
+                 df <- select(df, COUNTRY, YEAR, TEMP, AGE, SEX, MARSTAT, COUNTRYB, ILOSTAT, FTPT, HATLEV1D, COEFF)
+                 c <- df$COUNTRY[1]
+                 df_country_pst_1998 <- rbind(df_country_pst_1998,df)
+         }
+         df_country <- rbind(df_country,df_country_pst_1998)
+ }
> rm(df_country_pst_1998)
Warning message:
In rm(df_country_pst_1998) : object 'df_country_pst_1998' not found
> 
> # Clean ----
> 
> df_eu_lfs <- df_country %>%
+         mutate(COUNTRY = ifelse(COUNTRY == "UK", yes = "GB", no = COUNTRY))
Error: Problem with `mutate()` input `COUNTRY`.
✖ object 'COUNTRY' not found
ℹ Input `COUNTRY` is `ifelse(COUNTRY == "UK", yes = "GB", no = COUNTRY)`.
Backtrace:
    █
 1. ├─`%>%`(...)
 2. ├─dplyr::mutate(...)
 3. ├─dplyr:::mutate.data.frame(...)
 4. │ └─dplyr:::mutate_cols(.data, ...)
 5. │   ├─base::withCallingHandlers(...)
 6. │   └─mask$eval_all_mutate(quo)
 7. ├─base::ifelse(COUNTRY == "UK", yes = "GB", no = COUNTRY)
 8. └─base::.handleSimpleError(...)
 9.   └─dplyr:::h(simpleError(msg, call))
Execution halted
