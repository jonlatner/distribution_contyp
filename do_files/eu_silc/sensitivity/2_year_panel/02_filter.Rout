
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Top commands -----------------------------------------
> # https://stackoverflow.com/questions/7505547/detach-all-packages-while-working-in-r
> detachAllPackages <- function() {
+         basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
+         package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
+         package.list <- setdiff(package.list,basic.packages)
+         if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
+         
+ }
> detachAllPackages()
> 
> rm(list=ls(all=TRUE))
> 
> # FOLDERS
> setwd("/Users/jonathanlatner/Google Drive/")
> # setwd("C:/Users/ba1ks6/Google Drive/")
> 
> orig_data_files = "SECCOPA/projects/distribution_contyp/data_files/eu_silc/"
> data_files = "SECCOPA/projects/distribution_contyp/data_files/eu_silc/2_year_panel/"
> 
> # LIBRARY
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.2     ✔ purrr   0.3.4
✔ tibble  3.0.6     ✔ dplyr   1.0.4
✔ tidyr   1.1.2     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> library(data.table) # faster merging

Attaching package: ‘data.table’

The following objects are masked from ‘package:dplyr’:

    between, first, last

The following object is masked from ‘package:purrr’:

    transpose

> library(beepr)
> library(reshape2)

Attaching package: ‘reshape2’

The following objects are masked from ‘package:data.table’:

    dcast, melt

The following object is masked from ‘package:tidyr’:

    smiths

> library(car) # recode
Loading required package: carData

Attaching package: ‘car’

The following object is masked from ‘package:dplyr’:

    recode

The following object is masked from ‘package:purrr’:

    some

> library(zoo) # na.locf

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

> 
> # step 0: Load data -----------------------------------------
> 
> df_eu_silc_0 <- readRDS(file = paste0(orig_data_files,"df_eu_silc.rds"))
> 
> step0 <- data.frame(with(df_eu_silc_0, table(country,panel)))
> step0 <- filter(step0, Freq>0) %>%
+         arrange(panel,country)  %>%
+         mutate(total = sum(Freq))
> df_unique <- df_eu_silc_0 %>%
+         select(country,panel,pid) %>%
+         group_by(country,panel,pid) %>%
+         slice(1) %>%
+         group_by(country,panel) %>%
+         tally() %>%
+         ungroup()
> step0 <- merge(step0,df_unique) %>%
+         mutate(step = 0)
> head(step0)
  country panel  Freq    total     n step
1      AT  2007 31719 14724687 13246    0
2      AT  2008 29468 14724687 12618    0
3      AT  2009 27717 14724687 12112    0
4      AT  2010 27147 14724687 11824    0
5      AT  2011 27469 14724687 11469    0
6      AT  2012 28257 14724687 11364    0
> 
> # step 1: Panel level filters ----
> 
> df_eu_silc_1 <- df_eu_silc_0
> 
> df_eu_silc_1$country <- as.factor(df_eu_silc_1$country) 
> levels(df_eu_silc_1$country)[levels(df_eu_silc_1$country)=="EL"] <- "GR"
> levels(df_eu_silc_1$country)[levels(df_eu_silc_1$country)=="UK"] <- "GB"
> 
> # Panel must be no longer than 4 years long - Appears to be a problem in LU
> 
> # with(df_eu_silc_1,table(panel,year))
> # df_test <- filter(df_eu_silc_1,panel==2010&year==2003)
> # table(df_test$country)
> # rm(df_test)
> 
> df_eu_silc_1 <- df_eu_silc_1 %>%
+         mutate(test = ifelse(panel == 2007 & year < 2004, yes = 1, 
+                              ifelse(panel == 2008 & year < 2005, yes = 1,
+                                     ifelse(panel == 2009 & year < 2006, yes = 1, 
+                                            ifelse(panel == 2010 & year < 2007, yes = 1, no = 0))))) %>%
+         filter(test == 0) %>%
+         select(-test)
> 
> # drop panel == 2007 because only 5 countries with 4 year panel period
> # df_test <- df_eu_silc_1 %>%
> #         filter(weight_long_2 > 0)
> # with(df_test,table(country,panel))
> 
> df_eu_silc_1 <- df_eu_silc_1 %>%
+         filter(panel>2007)
> 
> # Must have non-missing, temporary employment rate in a given country, panel, year > 0
> # Remember, contyp is coded 1 or 2, so rate of 1 = rate of 0
> df_test_1 <- df_eu_silc_1 %>%
+         group_by(country, panel, year) %>%
+         summarise(mean = mean(contyp, na.rm = TRUE)) %>%
+         ungroup() %>%
+         arrange(mean)
`summarise()` has grouped output by 'country', 'panel'. You can override using the `.groups` argument.
> 
> # Appears to only affect Denmark in years between 2005 and 2010
> # table(subset(df_test_1,mean==1)$country)
> # table(subset(df_test_1,mean==1&country=="DK")$panel,subset(df_test_1,mean==1&country=="DK")$year)
> 
> df_test_2 <- df_test_1 %>%
+         filter(mean>1)
> df_eu_silc_1 <- merge(data.table(df_eu_silc_1),data.table(df_test_2),all.y = TRUE)
> rm(df_test_1, df_test_2)
> 
> # Must be present for at least 2 panels in order to have a trend
> # This appears to be only a problem for Germany
> df_test_1 <- data.frame(with(df_eu_silc_1,table(country,panel)))
> df_test_2 <- df_test_1 %>%
+         arrange(country,panel) %>%
+         filter(Freq>0) %>%
+         group_by(country) %>%
+         summarise(count = n()) %>%
+         ungroup()
> filter(df_test_2,count<3)
# A tibble: 1 x 2
  country count
  <fct>   <int>
1 DE          2
> df_test_3 <- df_test_2 %>%
+         filter(count>2) %>%
+         select(-count)
> df_eu_silc_1 <- merge(data.table(df_eu_silc_1),data.table(df_test_3),by=c("country"),all.y = TRUE)
> rm(df_test_1, df_test_2, df_test_3)
> df_eu_silc_1 <- droplevels(df_eu_silc_1)
> 
> step1 <- data.frame(with(df_eu_silc_1, table(country,panel)))
> step1 <- filter(step1, Freq>0) %>%
+         arrange(panel,country)  %>%
+         mutate(total = sum(Freq))
> df_unique <- df_eu_silc_1 %>%
+         select(country,panel,pid) %>%
+         group_by(country,panel,pid) %>%
+         slice(1) %>%
+         group_by(country,panel) %>%
+         tally() %>%
+         ungroup()
> step1 <- merge(step1,df_unique) %>%
+         mutate(step = 1)
> head(step1)
  country panel  Freq    total     n step
1      AT  2008 29468 13502253 12618    1
2      AT  2009 27717 13502253 12112    1
3      AT  2010 27147 13502253 11824    1
4      AT  2011 27469 13502253 11469    1
5      AT  2012 28257 13502253 11364    1
6      AT  2013 26714 13502253 10863    1
> 
> # step 2: Individual-level filters -----------------------------------------
> 
> # for some reason, in the NL, if panel>=2016, first year has weight_personal_base==0
> # therefore, to keep a 4 year panel, we weight these to 1
> # df_base_weight <- df_eu_silc_1 %>%
> #         filter(country=="NL") %>%
> #         filter(panel==2019) %>%
> #         select(country,pid,year,panel,matches("weight")) %>%
> #         arrange(country,pid,year,panel,weight_personal_base)
> # table(df_base_weight$year)
> 
> # for some reason, in NO, if panel>=2010, only last observation in panel period has weight_personal_base>0
> # therefore, to keep a 4 year panel, we weight these to 1
> # df_base_weight <- df_eu_silc_1 %>%
> #         filter(country=="NO") %>%
> #         select(country,panel,pid,year,matches("weight")) %>%
> #         arrange(country,panel,pid,year,weight_personal_base) %>%
> #         group_by(panel,pid) %>%
> #         mutate(count=row_number(),
> #                max=max(count)) %>%
> #         filter(max==2) %>%
> #         filter(row_number()==1) %>%
> #         group_by(panel) %>%
> #         summarise(mean=mean(weight_personal_base)) %>%
> #         ungroup()
> # df_base_weight
> 
> df_eu_silc_2 <- df_eu_silc_1 %>%
+         mutate(age = year - birthy) %>%
+         mutate(weight_personal_base=ifelse(country == "NL" & weight_personal_base == 0 & (panel==2016|panel==2017|panel==2018|panel==2019), yes = 1, no = weight_personal_base)) %>%
+         mutate(weight_personal_base=ifelse(country == "NO" & weight_personal_base == 0 & (panel>=2010), yes = 1, no = weight_personal_base)) %>%
+         filter(weight_personal_base>0) %>% # remove duplicates
+         filter(age >= 25 & age < 55) %>%
+         select(country, pid, year, weight_long_2, everything()) %>%
+         arrange(country, pid, year)
> 
> # Clean employment status
> df_eu_silc_2$empst_1_new <- recode(df_eu_silc_2$empst_1, "1=1; 2=2; 3=0; 4:hi=3; else = NA")  # unemployed = 0, employed = 1, else = NA
> df_eu_silc_2$empst_2_new <- recode(df_eu_silc_2$empst_2, "c(1,3)=1; c(2,4)=2; 5=0; 6:hi = 3; else = NA")  # unemployed = 0, employed = 1, else = NA
> 
> # Clean employment status
> # Between 2009 and 2012, SILC data transitioned from one definition of employment status to another.
> # Moving from PL030 to PL031.  The difference is that PL031 accounts for self-employed
> # To maintain consistency, we include self-employed as employed, conditional being employed with an observable work contract
> # Therefore, three distinct definitions of employment status: 1) panel == 2008; 2) 2008 < panel < 2013; 3) panel >= 2013
> # It is crucial to use the indicator variable
> # Recode 1 = employed FT; 2 = employed PT; 0 = unemployed; 3 = not in labor force (NILF) 
> 
> df_empst_2009_2012 <- df_eu_silc_2 %>%
+         filter(panel > 2008 & panel < 2013) %>%
+         select(country,panel,pid,year,matches("empst")) %>% 
+         mutate(empst_1_new = ifelse(empst_1_f==-5, yes = empst_2_new, # if old indicator says to do so, then replace old with new variable 
+                                     ifelse(empst_1_f == 1, yes = empst_1_new, no = NA)), # else use old variable
+                empst_2_new = ifelse(empst_2_f==-5, yes = empst_1_new, #  if new indicator says to do so, then replace new with old variable
+                                     ifelse(empst_2_f == 1, yes = empst_2_new, no = NA)), # else use new variable
+         ) %>% # next step below, if employment status is missing in BOTH variables, then drop observations 
+         mutate(test = ifelse(is.na(empst_1_new) & is.na(empst_2_new), yes = 1, no = 0)) %>% 
+         filter(test == 0) %>%
+         select(-test)
> 
> with(df_empst_2009_2012,table(empst_1_new,empst_2_new, useNA = "ifany"))
           empst_2_new
empst_1_new       0       1       2       3    <NA>
       0     137066       0       0       0     281
       1          0 1202429       0       0    6462
       2          0       0  170015       0    1620
       3          0       0       0  249500    1684
       <NA>   17135  117903   11172   26911       0
> 
> # In some countries (NL), this coding is enough
> with(subset(df_empst_2009_2012,country=="NL"),table(empst_1_new,empst_2_new, useNA = "ifany"))
           empst_2_new
empst_1_new     0     1     2     3
          0  1411     0     0     0
          1     0 48369     0     0
          2     0     0 35649     0
          3     0     0     0 10188
> 
> # In some countries (PL), this coding is not enough
> with(subset(df_empst_2009_2012,country=="PL"),table(empst_1_new,empst_2_new, useNA = "ifany"))
           empst_2_new
empst_1_new     0     1     2     3
       0    10684     0     0     0
       1        0 88942     0     0
       2        0     0  5884     0
       3        0     0     0 19559
       <NA>   306  2539   203   608
> with(subset(df_empst_2009_2012,country=="PL"),table(empst_1_f,empst_2_new, useNA = "ifany"))
         empst_2_new
empst_1_f     0     1     2     3
       -5  6771 59810  3956 12837
       0    306  2539   203   608
       1   3913 29132  1928  6722
> 
> # PL is also the only country where empst_1_f == 0, which is not nice because there is no value label for this code in that or any year
> # LT and SI are also the only countries where empst_1_f == -1
> with(df_empst_2009_2012,table(country,empst_1_f, useNA = "ifany"))
       empst_1_f
country    -5    -1     0     1  <NA>
     AT     0     0     0 55883     0
     BE 19435     0     0 33535     0
     BG 24312     0     0 12051 13945
     CH     0     0     0     0     0
     CY 15836     0     0 10193 10608
     CZ 18086     0     0 22947 36559
     DK  5165     0     0     0  2610
     EE 31063     0     0 15727     0
     GR 29770     0     0 19320 14054
     ES 87331     0     0 52296     0
     FI 46036     0     0 17259     0
     FR 76995     0     0 34406     0
     HR  3683     0     0     0 16202
     HU 38905     0     0 54443     0
     IE  5445     0     0 10556     0
     IS  9896     0     0  7566  6509
     IT 84112     0     0 60387 43561
     LT 27633  3414     0 13779     0
     LU 48693     0     0 27021     0
     LV 37104     0     0 14219     0
     MT 16270     0     0 11622 10434
     NL 58767     0     0 36850     0
     NO 37269     0     0 21449     0
     PL 83374     0  3656 41695     0
     PT 33480     0     0 12103     0
     RO 45924     0     0 17201     0
     RS     0     0     0     0     0
     SE 16145     0     0 24356 11568
     SI 84669     1     0 40060     0
     SK 44327     0     0 18018     0
     GB 30105     0     0 24285     0
> with(subset(df_empst_2009_2012,country=="PL"),table(empst_1_f,year, useNA = "ifany"))
         year
empst_1_f  2006  2007  2008  2009  2010  2011  2012
       -5     0     0     0 27778 26891 19476  9229
       0      0     0     0  3656     0     0     0
       1   4902 13041 23752     0     0     0     0
> with(subset(df_empst_2009_2012,country=="LT"),table(empst_1_f,year, useNA = "ifany"))
         year
empst_1_f  2006  2007  2008  2009  2010  2011  2012
       -5     0     0     0 10781  9972  3584  3296
       -1     0     0     0     0     0  3414     0
       1   1493  4577  7709     0     0     0     0
> with(subset(df_empst_2009_2012,country=="SI"),table(empst_1_f,year, useNA = "ifany"))
         year
empst_1_f  2006  2007  2008  2009  2010  2011  2012
       -5     0     0     0 31928 26897 18204  7640
       -1     0     0     0     1     0     0     0
       1   4375 12011 23674     0     0     0     0
> 
> with(subset(df_empst_2009_2012,country=="PL"),table(empst_1_f,empst_2_f, useNA = "ifany"))
         empst_2_f
empst_1_f    -5     1
       -5     0 83374
       0      0  3656
       1  41695     0
> with(subset(df_empst_2009_2012,country=="LT"),table(empst_1_f,empst_2_f, useNA = "ifany"))
         empst_2_f
empst_1_f    -5     1
       -5     0 27633
       -1     0  3414
       1  13779     0
> with(subset(df_empst_2009_2012,country=="SI"),table(empst_1_f,empst_2_f, useNA = "ifany"))
         empst_2_f
empst_1_f    -5    -1     1
       -5     0     0 84669
       -1     0     0     1
       1  40059     1     0
> 
> # fix coding issue with PL, LT, SI, as described above
> df_empst_2009_2012 <- df_empst_2009_2012 %>%
+         mutate(empst_1_new = ifelse(empst_1_f==0&empst_2_f == 1&country=="PL", yes = empst_2_new, no = empst_1_new),
+                empst_1_new = ifelse(empst_1_f==-1&empst_2_f == 1&country=="LT", yes = empst_2_new, no = empst_1_new),
+                empst_1_new = ifelse(empst_1_f==-1&empst_2_f == 1&country=="SI", yes = empst_2_new, no = empst_1_new),
+         )
> 
> with(df_empst_2009_2012,table(empst_1_new,empst_2_new, useNA = "ifany"))
           empst_2_new
empst_1_new       0       1       2       3    <NA>
       0     137804       0       0       0     281
       1          0 1207478       0       0    6462
       2          0       0  170363       0    1620
       3          0       0       0  250436    1684
       <NA>   16397  112854   10824   25975       0
> 
> # the remaining problem with matching old/new employment status is with observations where is.na(empst_1_f) or empst_2_f==-1
> df_test <- filter(df_empst_2009_2012,!is.na(empst_2_new) & is.na(empst_1_new))
> df_test <- droplevels(df_test)
> summary(df_test)
    country          panel           pid                 year     
 IT     :43561   Min.   :2011   Min.   :5.900e+05   Min.   :2008  
 CZ     :36559   1st Qu.:2012   1st Qu.:1.911e+08   1st Qu.:2010  
 HR     :16202   Median :2012   Median :2.474e+08   Median :2011  
 GR     :14054   Mean   :2012   Mean   :3.672e+08   Mean   :2011  
 BG     :13945   3rd Qu.:2012   3rd Qu.:6.715e+08   3rd Qu.:2012  
 SE     :11568   Max.   :2012   Max.   :1.484e+09   Max.   :2012  
 (Other):30161                                                    
    empst_1         empst_1_f        self_empst       empst_2         empst_2_f
 Min.   : NA      Min.   : NA      Min.   :1.00    Min.   : 1.000   Min.   :1  
 1st Qu.: NA      1st Qu.: NA      1st Qu.:3.00    1st Qu.: 1.000   1st Qu.:1  
 Median : NA      Median : NA      Median :3.00    Median : 1.000   Median :1  
 Mean   :NaN      Mean   :NaN      Mean   :2.82    Mean   : 2.951   Mean   :1  
 3rd Qu.: NA      3rd Qu.: NA      3rd Qu.:3.00    3rd Qu.: 5.000   3rd Qu.:1  
 Max.   : NA      Max.   : NA      Max.   :4.00    Max.   :11.000   Max.   :1  
 NA's   :166050   NA's   :166050   NA's   :32126                               
  empst_1_new      empst_2_new   
 Min.   : NA      Min.   :0.000  
 1st Qu.: NA      1st Qu.:1.000  
 Median : NA      Median :1.000  
 Mean   :NaN      Mean   :1.279  
 3rd Qu.: NA      3rd Qu.:1.000  
 Max.   : NA      Max.   :3.000  
 NA's   :166050                  
> 
> df_test <- filter(df_empst_2009_2012,is.na(empst_2_new) & !is.na(empst_1_new))
> df_test <- droplevels(df_test)
> summary(df_test)
 country        panel           pid                 year         empst_1     
 BE:    2   Min.   :2009   Min.   :138580001   Min.   :2006   Min.   :1.000  
 SI:    1   1st Qu.:2009   1st Qu.:156555001   1st Qu.:2006   1st Qu.:1.000  
 GB:10044   Median :2009   Median :195880001   Median :2007   Median :1.000  
            Mean   :2009   Mean   :184608308   Mean   :2007   Mean   :2.238  
            3rd Qu.:2010   3rd Qu.:210665002   3rd Qu.:2007   3rd Qu.:2.000  
            Max.   :2012   Max.   :701250001   Max.   :2010   Max.   :9.000  
                                                                             
   empst_1_f   self_empst       empst_2        empst_2_f   empst_1_new   
 Min.   :1   Min.   :1.000   Min.   : NA     Min.   :-1   Min.   :0.000  
 1st Qu.:1   1st Qu.:3.000   1st Qu.: NA     1st Qu.:-1   1st Qu.:1.000  
 Median :1   Median :3.000   Median : NA     Median :-1   Median :1.000  
 Mean   :1   Mean   :2.871   Mean   :NaN     Mean   :-1   Mean   :1.468  
 3rd Qu.:1   3rd Qu.:3.000   3rd Qu.: NA     3rd Qu.:-1   3rd Qu.:2.000  
 Max.   :1   Max.   :3.000   Max.   : NA     Max.   :-1   Max.   :3.000  
             NA's   :1984    NA's   :10047                               
  empst_2_new   
 Min.   : NA    
 1st Qu.: NA    
 Median : NA    
 Mean   :NaN    
 3rd Qu.: NA    
 Max.   : NA    
 NA's   :10047  
> 
> # fix issue where observations are missing values, as described above 
> df_empst_2009_2012 <- df_empst_2009_2012 %>%
+         mutate(empst_1_new = ifelse(is.na(empst_1_f)&empst_2_f == 1, yes = empst_2_new, no = empst_1_new),
+                empst_2_new = ifelse(empst_2_f==-1&empst_1_f == 1, yes = empst_1_new, no = empst_2_new),
+         ) 
> 
> with(df_empst_2009_2012,table(empst_1_new,empst_2_new, useNA = "ifany"))
           empst_2_new
empst_1_new       0       1       2       3
          0  154482       0       0       0
          1       0 1326794       0       0
          2       0       0  182807       0
          3       0       0       0  278095
> 
> # make new employment status variable for these years
> df_empst_2009_2012 <- df_empst_2009_2012 %>%
+         mutate(empst_2009_2012 = empst_2_new) %>%
+         select(country,panel,pid,year,empst_2009_2012)
> 
> df_eu_silc_2 <- merge(data.table(df_eu_silc_2),data.table(df_empst_2009_2012), all.x = TRUE)
> 
> rm(df_empst_2009_2012)
> 
> df_eu_silc_2 <- df_eu_silc_2 %>%
+         mutate(empst = ifelse(panel < 2009, yes = empst_1_new,
+                               ifelse((panel > 2008 & panel < 2013), yes = empst_2009_2012,
+                                      ifelse(panel > 2012, yes = empst_2_new, no = NA))))
> 
> df_eu_silc_2 <- df_eu_silc_2 %>%
+         mutate(ftime = ifelse(empst==1, yes = 1,
+                               ifelse(empst==2, yes = 0, no = NA)),
+                contyp = ifelse(empst==0, yes = NA, no = contyp))
> 
> df_eu_silc_2$empst <- recode(df_eu_silc_2$empst, "1:2=1; 0=0; else=NA") #employed or unemployed
> 
> # Clean contract type
> df_eu_silc_2 <- df_eu_silc_2 %>%
+         mutate(contyp = ifelse(empst==0, yes = NA, no = contyp))
> 
> df_eu_silc_2 <- df_eu_silc_2 %>%
+         filter(empst == 0 | empst == 1) # employed or unemployed
> 
> step2 <- data.frame(with(df_eu_silc_2, table(country,panel)))
> step2 <- filter(step2, Freq>0) %>%
+         arrange(panel,country)  %>%
+         mutate(total = sum(Freq))
> step2a <- dcast(step2, country~panel)
Using total as value column: use value.var to override.
> df_unique <- df_eu_silc_2 %>%
+         select(country,panel,pid) %>%
+         group_by(country,panel,pid) %>%
+         slice(1) %>%
+         group_by(country,panel) %>%
+         tally() %>%
+         ungroup()
> step2 <- merge(step2,df_unique) %>%
+         mutate(step = 2)
> head(step2)
  country panel  Freq   total    n step
1      AT  2008 12476 5234565 5745    2
2      AT  2009 11830 5234565 5548    2
3      AT  2010 11816 5234565 5436    2
4      AT  2011 11808 5234565 5242    2
5      AT  2012 11972 5234565 5190    2
6      AT  2013 11264 5234565 4948    2
> 
> # step 3: Must be employed at least once -----------------------------------------
> 
> df_eu_silc_3 <- df_eu_silc_2 %>%
+         select(-matches("empst_")) %>%
+         group_by(panel, country, pid) %>%
+         mutate(empst_num = sum(empst, na.rm = TRUE)) %>%
+         ungroup() %>%
+         arrange(panel, country, pid, year) %>%
+         filter(empst_num > 0)
> 
> step3 <- data.frame(with(df_eu_silc_3, table(country,panel)))
> step3 <- filter(step3, Freq>0) %>%
+         arrange(panel,country)  %>%
+         mutate(total = sum(Freq))
> step3a <- dcast(step3, country~panel)
Using total as value column: use value.var to override.
> df_unique <- df_eu_silc_3 %>%
+         select(country,panel,pid) %>%
+         group_by(country,panel,pid) %>%
+         slice(1) %>%
+         group_by(country,panel) %>%
+         tally() %>%
+         ungroup()
> step3 <- merge(step3,df_unique) %>%
+         mutate(step = 3)
> head(step3)
  country panel  Freq   total    n step
1      AT  2008 12147 4887435 5535    3
2      AT  2009 11482 4887435 5308    3
3      AT  2010 11455 4887435 5187    3
4      AT  2011 11440 4887435 5004    3
5      AT  2012 11587 4887435 4943    3
6      AT  2013 10866 4887435 4704    3
> 
> # step 4: Case wise deletion on IV of interest -----------------------------------------
> 
> df_eu_silc_4 <- df_eu_silc_3
> 
> # education
> # 1 - primary, 2 - secondary (lower and upper), 3 - post-secondary (non-tertiary), 4 - tertiary
> df_eu_silc_4$isced_cat_1 <- recode(df_eu_silc_4$isced, "0:2=1; 3=2; 4=3; 5:6=4;
+                                  34=3; 35=3; 
+                                  100:200=1; 300:354=2; 400:499=3; 500:900=4")
> 
> # 1 - less than secondary, 2 - secondary, 3 - more than secondary
> df_eu_silc_4$isced_cat_2 <- recode(df_eu_silc_4$isced_cat_1, "1=1; 2=2; 3:4=3")
> df_eu_silc_4 <- df_eu_silc_4 %>%
+         group_by(panel, country, pid) %>%
+         # mutate(isced_cat_1 = na.locf(isced_cat_1, na.rm=FALSE),
+         #        isced_cat_1 = last(isced_cat_1)) %>%
+         mutate(isced_cat_2 = na.locf(isced_cat_2, na.rm=FALSE),
+                isced_cat_2 = last(isced_cat_2)) %>%
+         ungroup()
> 
> # male = 1; female = 0
> df_eu_silc_4$male <- recode(df_eu_silc_4$sex, "1=1; 2=0")
> 
> # Casewise delete missing observations
> df_eu_silc_4 <- subset(df_eu_silc_4, !is.na(isced_cat_2)) # small number of cases with missing education
> df_eu_silc_4 <- subset(df_eu_silc_4, !is.na(male)) # small number of cases with missing gender
> 
> # drop if contract information is missing and employed 
> df_eu_silc_4 <- df_eu_silc_4 %>%
+         mutate(missing = ifelse(empst == 1 & is.na(contyp), yes = 1, no = 0)) %>%
+         filter(missing == 0) %>%
+         select(-missing)
> 
> step4 <- data.frame(with(df_eu_silc_4, table(country,panel)))
> step4 <- filter(step4, Freq>0) %>%
+         arrange(panel,country)  %>%
+         mutate(total = sum(Freq))
> step4a <- dcast(step4, country~panel)
Using total as value column: use value.var to override.
> df_unique <- df_eu_silc_4 %>%
+         select(country,panel,pid) %>%
+         group_by(country,panel,pid) %>%
+         slice(1) %>%
+         group_by(country,panel) %>%
+         tally() %>%
+         ungroup()
> step4 <- merge(step4,df_unique) %>%
+         mutate(step = 4)
> head(step4)
  country panel  Freq   total    n step
1      AT  2008 10705 3675604 4939    4
2      AT  2009 10025 3675604 4704    4
3      AT  2010 10014 3675604 4617    4
4      AT  2011 10033 3675604 4460    4
5      AT  2012 10196 3675604 4392    4
6      AT  2013  9484 3675604 4158    4
> 
> # step 5: Individuals in first 2 years of 4 year panel period -----------------------------------------
> 
> df_eu_silc_5 <- df_eu_silc_4 %>%
+         arrange(country, panel, pid, year) %>%
+         group_by(country, panel, pid) %>%
+         mutate(weight_long_2 = last(weight_long_2)) %>%
+         mutate(number = row_number(),
+                count = max(number)) %>% 
+         filter(count >= 2 & number <= 2) %>%
+         mutate(test = ifelse(row_number()==2, yes = year - lag(year), no = NA),
+                test = last(test)) %>%
+         filter(test == 1) %>%
+         ungroup() %>%
+         select(country, panel, pid, year, everything()) %>%
+         arrange(country, panel, pid, year)
> 
> step5 <- data.frame(with(df_eu_silc_5, table(country,panel)))
> step5 <- filter(step5, Freq>0) %>%
+         arrange(panel,country)  %>%
+         mutate(total = sum(Freq))
> step5a <- dcast(step5, country~panel)
Using total as value column: use value.var to override.
> df_unique <- df_eu_silc_5 %>%
+         select(country,panel,pid) %>%
+         group_by(country,panel,pid) %>%
+         slice(1) %>%
+         group_by(country,panel) %>%
+         tally() %>%
+         ungroup()
> step5 <- merge(step5,df_unique) %>%
+         mutate(step = 5)
> head(step5)
  country panel Freq   total    n step
1      AT  2008 6840 2307656 3420    5
2      AT  2009 6292 2307656 3146    5
3      AT  2010 6266 2307656 3133    5
4      AT  2011 6392 2307656 3196    5
5      AT  2012 6364 2307656 3182    5
6      AT  2013 5860 2307656 2930    5
> 
> # step 6: Drop without longitudinal weight -----------------------------------------
> 
> df_eu_silc_6 <- df_eu_silc_5 %>%
+         filter(!is.na(weight_long_2) & weight_long_2>0)
> 
> step6 <- data.frame(with(df_eu_silc_6, table(country,panel)))
> step6 <- filter(step6, Freq>0) %>%
+         arrange(panel,country)  %>%
+         mutate(total = sum(Freq))
> step6a <- dcast(step6, country~panel)
Using total as value column: use value.var to override.
> df_unique <- df_eu_silc_6 %>%
+         select(country,panel,pid) %>%
+         group_by(country,panel,pid) %>%
+         slice(1) %>%
+         group_by(country,panel) %>%
+         tally() %>%
+         ungroup()
> step6 <- merge(step6,df_unique) %>%
+         mutate(step = 6)
> head(step6)
  country panel Freq   total    n step
1      AT  2008 4894 1914466 2447    6
2      AT  2009 4840 1914466 2420    6
3      AT  2010 5216 1914466 2608    6
4      AT  2011 5384 1914466 2692    6
5      AT  2012 5346 1914466 2673    6
6      AT  2013 4804 1914466 2402    6
> 
> # Save -----------------------------------------
> 
> df_eu_silc_7 <- df_eu_silc_6 %>%
+         select(country,panel,pid,year,weight_long_2,male,job_change,isced_cat_2,empst,contyp,age,empst,empst_num)
> 
> saveRDS(df_eu_silc_7, file = paste0(data_files, "df_eu_silc_filter.rds"))
> 
> beep()
> head(step0) # raw data
  country panel  Freq    total     n step
1      AT  2007 31719 14724687 13246    0
2      AT  2008 29468 14724687 12618    0
3      AT  2009 27717 14724687 12112    0
4      AT  2010 27147 14724687 11824    0
5      AT  2011 27469 14724687 11469    0
6      AT  2012 28257 14724687 11364    0
> head(step1) # "Country panel filters: Every panel period can only have four years.  Each country, panel, year must have non-missing temporary employment rate $>$ 0.  Each country must be in at least 3 periods (i.e. trend)."
  country panel  Freq    total     n step
1      AT  2008 29468 13502253 12618    1
2      AT  2009 27717 13502253 12112    1
3      AT  2010 27147 13502253 11824    1
4      AT  2011 27469 13502253 11469    1
5      AT  2012 28257 13502253 11364    1
6      AT  2013 26714 13502253 10863    1
> head(step2) # "Individual filters: prime age (25 - 54), active labor market participation (employed or unemployed), personal weight $>$ 0"
  country panel  Freq   total    n step
1      AT  2008 12476 5234565 5745    2
2      AT  2009 11830 5234565 5548    2
3      AT  2010 11816 5234565 5436    2
4      AT  2011 11808 5234565 5242    2
5      AT  2012 11972 5234565 5190    2
6      AT  2013 11264 5234565 4948    2
> head(step3) # "Must be employed at least once"
  country panel  Freq   total    n step
1      AT  2008 12147 4887435 5535    3
2      AT  2009 11482 4887435 5308    3
3      AT  2010 11455 4887435 5187    3
4      AT  2011 11440 4887435 5004    3
5      AT  2012 11587 4887435 4943    3
6      AT  2013 10866 4887435 4704    3
> head(step4) # "Case-wise deletion of missing variables on education, gender, age, and contract type"
  country panel  Freq   total    n step
1      AT  2008 10705 3675604 4939    4
2      AT  2009 10025 3675604 4704    4
3      AT  2010 10014 3675604 4617    4
4      AT  2011 10033 3675604 4460    4
5      AT  2012 10196 3675604 4392    4
6      AT  2013  9484 3675604 4158    4
> head(step5) # "Individuals in each year of 4 year panel period"
  country panel Freq   total    n step
1      AT  2008 6840 2307656 3420    5
2      AT  2009 6292 2307656 3146    5
3      AT  2010 6266 2307656 3133    5
4      AT  2011 6392 2307656 3196    5
5      AT  2012 6364 2307656 3182    5
6      AT  2013 5860 2307656 2930    5
> head(step6) # "Must have 4 year longitudinal weight"
  country panel Freq   total    n step
1      AT  2008 4894 1914466 2447    6
2      AT  2009 4840 1914466 2420    6
3      AT  2010 5216 1914466 2608    6
4      AT  2011 5384 1914466 2692    6
5      AT  2012 5346 1914466 2673    6
6      AT  2013 4804 1914466 2402    6
> df_filter_steps <- rbind(step0,step1,step2,step3,step4,step5,step6)
> saveRDS(df_filter_steps, file = paste0(data_files, "df_eu_silc_filter_steps.rds"))
> 
> 
> proc.time()
   user  system elapsed 
706.662  44.044 775.290 
